# docker-compose.override.yml - Local development overrides
# This file is automatically loaded by Docker Compose for local development
# It provides development-specific configurations and overrides production settings

services:
  # PostgreSQL optimized for development
  postgres:
    # Development-friendly PostgreSQL settings
    command:
      - postgres
      - -c
      - shared_preload_libraries=pgcrypto
      - -c
      - max_connections=20               # Lower for development
      - -c
      - shared_buffers=128MB            # Smaller for dev environments
      - -c
      - effective_cache_size=256MB      # Adjusted for dev
      - -c
      - maintenance_work_mem=32MB       # Smaller for dev
      - -c
      - checkpoint_completion_target=0.9
      - -c
      - wal_buffers=8MB                 # Smaller for dev
      - -c
      - default_statistics_target=50    # Lower precision for dev
      - -c
      - random_page_cost=1.1           # Assume SSD for dev
      - -c
      - effective_io_concurrency=200   # SSD setting
      - -c
      - log_statement=all              # Log all statements for debugging
      - -c
      - log_duration=on                # Log query durations
      - -c
      - log_min_duration_statement=1000 # Log slow queries (>1s)
      - -c
      - ssl=off                        # Disable SSL for development
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword123}
      POSTGRES_DB: notes
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"  # Expose PostgreSQL port for local connections
    # Remove production volumes and use local bind mount for easier debugging
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: "no"  # Don't auto-restart in development

  # Redis optimized for development
  redis:
    command: redis-server --appendonly no --save "" --requirepass ${REDIS_PASSWORD:-devredis123}
    ports:
      - "6379:6379"  # Expose Redis port for local connections
    volumes:
      - redis_dev_data:/data
    restart: "no"

  # Backend with development settings
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-devpassword123}@postgres:5432/notes?sslmode=disable
      REDIS_URL: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-devredis123}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-change-in-production-please-make-it-64-chars}
      SERVER_ENCRYPTION_KEY: ${SERVER_ENCRYPTION_KEY:-dev-encryption-key-32-chars!!!}
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:8080,http://localhost
      PORT: 8080
      LOG_LEVEL: debug
      GO_ENV: development
    volumes:
      # Mount source code for hot reloading (if using air or similar)
      - ./backend:/app/src:ro
    restart: "no"

  # Frontend with development settings
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8080
        NODE_ENV: development
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
    volumes:
      # Mount source code for hot reloading
      - ./frontend:/app/src:ro
      - /app/src/node_modules  # Prevent overwriting node_modules
    restart: "no"

# Development-specific volumes
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local