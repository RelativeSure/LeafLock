name: Helm Chart Release

on:
  release:
    types: [published]
  push:
    branches: [main, master]
    paths:
      - 'helm/**'
  workflow_dispatch:

env:
  HELM_VERSION: v3.13.0

jobs:
  helm-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Set up chart version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          VERSION=${{ github.event.release.tag_name }}
        else
          VERSION="0.1.0-dev.$(git rev-parse --short HEAD)"
        fi
        echo "chart_version=${VERSION}" >> $GITHUB_OUTPUT
        echo "app_version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Update Chart.yaml versions
      run: |
        sed -i "s/version: .*/version: ${{ steps.version.outputs.chart_version }}/" helm/leaflock/Chart.yaml
        sed -i "s/appVersion: .*/appVersion: \"${{ steps.version.outputs.app_version }}\"/" helm/leaflock/Chart.yaml

    - name: Lint Helm chart
      run: |
        helm dependency update helm/leaflock
        helm lint helm/leaflock

    - name: Package Helm chart
      run: |
        mkdir -p helm-packages
        helm package helm/leaflock --destination helm-packages

    - name: Upload Helm chart artifact
      uses: actions/upload-artifact@v4
      with:
        name: helm-chart-${{ steps.version.outputs.chart_version }}
        path: helm-packages/*.tgz
        retention-days: 90

    - name: Configure Git for gh-pages
      if: github.event_name == 'release'
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Deploy to GitHub Pages (Helm Repository)
      if: github.event_name == 'release'
      run: |
        # Check if gh-pages branch exists
        if git ls-remote --heads origin gh-pages | grep -q gh-pages; then
          git checkout gh-pages
          git pull origin gh-pages
        else
          git checkout --orphan gh-pages
          git rm -rf .
          echo "# LeafLock Helm Repository" > README.md
          git add README.md
          git commit -m "Initialize Helm repository"
        fi

        # Copy packaged chart
        cp helm-packages/*.tgz .

        # Update repository index
        helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

        # Commit and push
        git add .
        git commit -m "Release Helm chart ${{ steps.version.outputs.chart_version }}"
        git push origin gh-pages

    - name: Create release notes
      if: github.event_name == 'release'
      run: |
        echo "## Helm Chart Release ${{ steps.version.outputs.chart_version }}" >> release-notes.md
        echo "" >> release-notes.md
        echo "### Installation" >> release-notes.md
        echo "\`\`\`bash" >> release-notes.md
        echo "helm repo add leaflock https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> release-notes.md
        echo "helm repo update" >> release-notes.md
        echo "helm install leaflock leaflock/leaflock --version ${{ steps.version.outputs.chart_version }}" >> release-notes.md
        echo "\`\`\`" >> release-notes.md
        echo "" >> release-notes.md
        echo "### Chart Changes" >> release-notes.md
        echo "- Updated to app version ${{ steps.version.outputs.app_version }}" >> release-notes.md

    - name: Comment on PR (if applicable)
      if: github.event_name == 'push' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ðŸš€ Helm Chart Updated

            A development version of the Helm chart has been created: \`${{ steps.version.outputs.chart_version }}\`

            The chart has been linted and packaged successfully. Once this PR is merged and a release is created, the chart will be published to the Helm repository.`
          });