{{- if .Values.backend.enabled }}
{{- include "secure-notes.validateRequiredValues" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "secure-notes.backend.deploymentName" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "secure-notes.backend.labels" . | nindent 4 }}
    {{- if .Values.backend.deployment.labels }}
    {{- toYaml .Values.backend.deployment.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "secure-notes.annotations" . | nindent 4 }}
    {{- if .Values.backend.deployment.annotations }}
    {{- toYaml .Values.backend.deployment.annotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "secure-notes.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "secure-notes.backend.selectorLabels" . | nindent 8 }}
        {{- if .Values.backend.deployment.labels }}
        {{- toYaml .Values.backend.deployment.labels | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "secure-notes.backend.podAnnotations" . | nindent 8 }}
    spec:
      {{- include "secure-notes.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "secure-notes.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      {{- if .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.backend.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.tolerations }}
      tolerations:
        {{- toYaml .Values.backend.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.affinity }}
      affinity:
        {{- toYaml .Values.backend.affinity | nindent 8 }}
      {{- end }}
      initContainers:
        # Wait for database to be ready
        {{- if .Values.postgresql.enabled }}
        - name: wait-for-postgres
          image: postgres:15-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h {{ include "secure-notes.postgresql.serviceName" . }} -p {{ .Values.postgresql.primary.service.ports.postgresql | default 5432 }}; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
        {{- end }}
        # Wait for Redis to be ready
        {{- if .Values.redis.enabled }}
        - name: wait-for-redis
          image: redis:7-alpine
          command:
            - sh
            - -c
            - |
              until redis-cli -h {{ include "secure-notes.redis.serviceName" . }} -p {{ .Values.redis.master.service.ports.redis | default 6379 }} ping; do
                echo "Waiting for Redis to be ready..."
                sleep 2
              done
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
        {{- end }}
      containers:
        - name: backend
          image: {{ include "secure-notes.backend.image" . }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.containerPort }}
              protocol: TCP
          env:
            {{- include "secure-notes.backend.env" . | nindent 12 }}
          {{- if .Values.backend.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.livenessProbe.httpGet.path }}
              port: {{ .Values.backend.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.backend.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.backend.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.readinessProbe.httpGet.path }}
              port: {{ .Values.backend.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.backend.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.backend.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.backend.startupProbe.httpGet.path }}
              port: {{ .Values.backend.startupProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.backend.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.startupProbe.failureThreshold }}
            successThreshold: {{ .Values.backend.startupProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          {{- if .Values.backend.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.backend.volumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.backend.volumes }}
      volumes:
        {{- toYaml .Values.backend.volumes | nindent 8 }}
      {{- end }}
{{- end }}