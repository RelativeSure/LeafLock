{{- if .Values.tests.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "secure-notes.fullname" . }}-test
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "secure-notes.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
    - name: backend-test
      image: {{ include "secure-notes.tests.image" . }}
      command:
        - sh
        - -c
        - |
          echo "Testing backend health endpoint..."
          curl -f http://{{ include "secure-notes.backend.serviceName" . }}:{{ .Values.backend.service.port }}/api/v1/health || exit 1
          echo "Backend health check passed!"
          
          echo "Testing backend readiness endpoint..."
          curl -f http://{{ include "secure-notes.backend.serviceName" . }}:{{ .Values.backend.service.port }}/api/v1/ready || exit 1
          echo "Backend readiness check passed!"
          
    - name: frontend-test
      image: {{ include "secure-notes.tests.image" . }}
      command:
        - sh
        - -c
        - |
          echo "Testing frontend availability..."
          curl -f http://{{ include "secure-notes.frontend.serviceName" . }}:{{ .Values.frontend.service.port }}/ || exit 1
          echo "Frontend availability test passed!"
          
          echo "Testing frontend can reach backend through proxy..."
          curl -f http://{{ include "secure-notes.frontend.serviceName" . }}:{{ .Values.frontend.service.port }}/api/v1/health || exit 1
          echo "Frontend to backend proxy test passed!"
          
          echo "All tests completed successfully!"
{{- end }}

{{/*
Test image helper
*/}}
{{- define "secure-notes.tests.image" -}}
{{- $registry := .Values.tests.image.registry | default .Values.global.imageRegistry -}}
{{- $repository := .Values.tests.image.repository -}}
{{- $tag := .Values.tests.image.tag -}}
{{- if $registry -}}
{{- printf "%s/%s:%s" $registry $repository $tag -}}
{{- else -}}
{{- printf "%s:%s" $repository $tag -}}
{{- end -}}
{{- end }}